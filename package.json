{
	"name": "graalvm-i4gl",
	"displayName": "I4GL on GraalVM",
	"version": "0.1.0",
	"publisher": "guillermomolina",
	"description": "Visual Studio Code extension for Informix 4GL on GraalVM.",
	"author": {
		"name": "Guillermo Adri√°n Molina",
		"email": "guillermoadrianmolina@hotmail.com"
	},
	"license": "MIT",
	"keywords": [
		"multi-root ready"
	],
	"engines": {
		"vscode": "^1.49.0"
	},
	"icon": "images/graalvm-i4gl-icon.png",
	"categories": [
		"Debuggers"
	],
	"private": true,
	"repository": {
		"type": "git",
		"url": "https://github.com/guillermomolina/vscode-graalvm-i4gl.git"
	},
	"bugs": {
		"url": "https://github.com/guillermomolina/vscode-graalvm-i4gl/issues"
	},
	"scripts": {
		"vscode:prepublish": "yarn run package-ext && yarn run package-web",
		"compile": "tsc -p ./",
		"lint": "eslint src --ext ts",
		"watch": "webpack --watch --devtool nosources-source-map --info-verbosity verbose --config ./build/extension.webpack.config.js",
		"watch2": "tsc -watch -p ./",
		"pretest": "yarn run compile && yarn run lint",
		"test": "node ./out/test/runTest.js",
		"package": "vsce package",
		"publish": "vsce publish",
		"package-ext": "webpack --mode production --config ./build/extension.webpack.config.js",
		"compile-web": "webpack --devtool nosources-source-map --config ./build/web-extension.webpack.config.js",
		"watch-web": "webpack --watch --devtool nosources-source-map --info-verbosity verbose --config ./build/web-extension.webpack.config.js",
		"package-web": "webpack --mode production --config ./build/web-extension.webpack.config.js"
	},
	"dependencies": {
		"await-notify": "1.0.1",
		"decompress": "^4.2.1",
		"sax": "^1.2.4",
		"vscode-chrome-debug-core": "^6.8.9",
		"vscode-languageclient": "^6.1.3"
	},
	"devDependencies": {
		"@types/vscode": "^1.49.0",
		"@types/glob": "^7.1.3",
		"@types/mocha": "^8.0.0",
		"@types/node": "^14.0.27",
		"eslint": "^7.6.0",
		"@typescript-eslint/eslint-plugin": "^3.8.0",
		"@typescript-eslint/parser": "^3.8.0",
		"glob": "^7.1.6",
		"mocha": "^8.0.1",
		"typescript": "^3.8.3",
		"vscode-debugadapter-testsupport": "^1.42.0",
		"vsce": "^1.81.1",
		"ts-loader": "^8.0.3",
		"webpack": "^4.44.1",
		"webpack-cli": "^3.3.12"
	},
	"main": "./dist/ext/extension.js",
	"browser": "./dist/web/extension.js",
	"activationEvents": [
		"onDebug",
		"onDebugDynamicConfigurations:graalvm",
		"onCommand:extension.graalvm-debug.getProgramName",
		"onCommand:extension.graalvm-debug.runEditorContents",
		"onCommand:extension.graalvm-debug.debugEditorContents"
	],
	"contributes": {
		"configuration": {
			"type": "object",
			"title": "GraalVM",
			"properties": {
				"graalvm.home": {
					"type": "string",
					"default": "",
					"description": "Path to the active GraalVM installation"
				},
				"graalvm.installations": {
					"type": "array",
					"default": [],
					"description": "Paths to GraalVM installations"
				},
				"graalvm.languageServer.currentWorkDir": {
					"type": "string",
					"default": "",
					"description": "Absolute path to the working directory of the GraalVM Language Server"
				},
				"graalvm.languageServer.inProcessServer": {
					"type": "boolean",
					"default": true,
					"description": "Start GraalVM Language Server within processes being run or debugged"
				},
				"graalvm.languageServer.delegateServers": {
					"type": "string",
					"default": "",
					"description": "Comma-separated list of language@[host:]port where other language servers run"
				},
				"graalvm.languageServer.startRLanguageServer": {
					"type": "boolean",
					"default": true,
					"description": "Start R Language Server"
				},
				"graalvm.languageServer.startRubyLanguageServer": {
					"type": "boolean",
					"default": false,
					"description": "Start Ruby Language Server"
				}
			}
		},
		"commands": [
			{
				"command": "extension.graalvm.selectGraalVMHome",
				"title": "Set Active GraalVM Installation",
				"icon": "$(home)",
				"category": "GraalVM"
			},
			{
				"command": "extension.graalvm.installGraalVM",
				"title": "Download & Install GraalVM",
				"icon": "$(desktop-download)",
				"category": "GraalVM"
			},
			{
				"command": "extension.graalvm.addExistingGraalVM",
				"title": "Add Existing GraalVM",
				"icon": "$(new-folder)",
				"category": "GraalVM"
			},
			{
				"command": "extension.graalvm.refreshInstallations",
				"title": "Refresh",
				"icon": "$(refresh)"
			},
			{
				"command": "extension.graalvm.installGraalVMComponent",
				"title": "Install GraalVM Component",
				"icon": "$(add)",
				"category": "GraalVM"
			},
			{
				"command": "extension.graalvm.uninstallGraalVMComponent",
				"title": "Uninstall GraalVM Component",
				"icon": "$(trash)",
				"category": "GraalVM"
			},
			{
				"command": "extension.graalvm.addNativeImageToPOM",
				"title": "Add Maven Native Image Plugin",
				"category": "GraalVM"
			},
			{
				"command": "extension.graalvm.toggleCodeCoverage",
				"title": "Toggle Code Coverage",
				"category": "GraalVM"
			},
			{
				"command": "extension.graalvm.installRLanguageServer",
				"title": "Install R Language Server",
				"category": "GraalVM"
			},
			{
				"command": "extension.graalvm.installRubyLanguageServer",
				"title": "Install Ruby Language Server",
				"category": "GraalVM"
			},
			{
				"command": "extension.graalvm-debug.debugEditorContents",
				"title": "Debug File",
				"icon": "$(debug-alt)"
			},
			{
				"command": "extension.graalvm-debug.runEditorContents",
				"title": "Run File",
				"icon": "$(play)"
			},
			{
				"command": "extension.graalvm-debug.toggleFormatting",
				"title": "Toggle between decimal and hex formatting"
			}
		],
		"viewsContainers": {
			"activitybar": [
				{
					"id": "graalvm-explorer",
					"title": "GraalVM",
					"icon": "resources/graalvm.svg"
				}
			]
		},
		"viewsWelcome": [
			{
				"view": "graalvm-installations",
				"contents": "No GraalVM installation found.\n[Download & Install GraalVM](command:extension.graalvm.installGraalVM)\n[Add Existing GraalVM](command:extension.graalvm.addExistingGraalVM)"
			}
		],
		"views": {
			"graalvm-explorer": [
				{
					"id": "graalvm-installations",
					"name": "Installations",
					"icon": "resources/graalvm.svg",
					"contextualTitle": "GraalVM Installations"
				}
			]
		},
		"menus": {
			"editor/title": [
				{
					"command": "extension.graalvm-debug.runEditorContents",
					"when": "resourceLangId == i4gl",
					"group": "1_run@10"
				},
				{
					"command": "extension.graalvm-debug.debugEditorContents",
					"when": "resourceLangId == i4gl",
					"group": "1_run@20"
				}
			],
			"debug/variables/context": [
				{
					"command": "extension.graalvm-debug.toggleFormatting",
					"when": "debugConfigurationType == 'graalvm' && debugProtocolVariableMenuContext == 'simple'"
				}
			],
			"editor/context": [
				{
					"command": "extension.graalvm.toggleCodeCoverage",
					"group": "4_coverage"
				}
			],
			"view/title": [
				{
					"command": "extension.graalvm.installGraalVM",
					"when": "view == graalvm-installations",
					"group": "navigation@1"
				},
				{
					"command": "extension.graalvm.addExistingGraalVM",
					"when": "view == graalvm-installations",
					"group": "navigation@2"
				},
				{
					"command": "extension.graalvm.refreshInstallations",
					"when": "view == graalvm-installations",
					"group": "navigation@3"
				}
			],
			"view/item/context": [
				{
					"command": "extension.graalvm.selectGraalVMHome",
					"when": "view == graalvm-installations && viewItem == graalvmInstallation",
					"group": "inline"
				},
				{
					"command": "extension.graalvm.installGraalVMComponent",
					"when": "view == graalvm-installations && viewItem == graalvmComponent",
					"group": "inline"
				},
				{
					"command": "extension.graalvm.uninstallGraalVMComponent",
					"when": "view == graalvm-installations && viewItem == graalvmComponentInstalled",
					"group": "inline"
				}
			]
		},
		"languages": [
			{
				"id": "i4gl",
				"aliases": [
					"Informix i4gl",
					"i4gl",
					"4gl"
				],
				"extensions": [
					".4gl",
					".per",
					".spsql"
				],
				"configuration": "./language-configuration.json"
			}
		],
		"grammars": [
			{
				"language": "i4gl",
				"scopeName": "source.i4gl",
				"path": "./syntaxes/i4gl.tmLanguage.json"
			}
		],
		"snippets": [
			{
				"language": "i4gl",
				"path": "./snippets/snippets.json"
			}
		],
		"configurationDefaults": {
			"[i4gl]": {
				"files.encoding": "iso885915",
				"files.insertFinalNewline": true
			},
			"[per]": {
				"files.encoding": "iso885915",
				"files.insertFinalNewline": true
			}
		},
		"breakpoints": [
			{
				"language": "i4gl"
			}
		],
		"debuggers": [
			{
				"type": "graalvm",
				"label": "GraalVM",
				"program": "./out/graalVMDebug.js",
				"runtime": "node",
				"configurationAttributes": {
					"launch": {
						"properties": {
							"program": {
								"type": "string",
								"description": "Absolute path to the program."
							},
							"args": {
								"type": "array",
								"description": "Command line arguments passed to the program.",
								"items": {
									"type": "string"
								},
								"default": []
							},
							"console": {
								"enum": [
									"internalConsole",
									"integratedTerminal"
								],
								"description": "Where to launch the debug target: internal console, or integrated terminal.",
								"default": "internalConsole"
							},
							"outputCapture": {
								"enum": [
									"console",
									"std"
								],
								"description": "From where to capture output messages: The debug API, or stdout/stderr streams.",
								"default": "console"
							},
							"cwd": {
								"type": "string",
								"description": "Absolute path to the working directory of the program being debugged.",
								"default": "${workspaceFolder}"
							},
							"runtimeExecutable": {
								"type": [
									"string",
									"null"
								],
								"markdownDescription": "Runtime to use. Either an absolute path or the name of a runtime available in GraalVM `bin` directory. If omitted `node` is assumed.",
								"default": null
							},
							"runtimeArgs": {
								"type": "array",
								"description": "Optional arguments passed to the runtime executable.",
								"items": {
									"type": "string"
								},
								"default": []
							},
							"port": {
								"type": "number",
								"description": "Debug port to attach to. Default is 9229.",
								"default": 9229
							},
							"address": {
								"type": "string",
								"description": "TCP/IP address of process to be debugged. Default is 'localhost'.",
								"default": "localhost"
							},
							"timeout": {
								"type": "number",
								"description": "Retry for this number of milliseconds to connect to GraalVM. Default is 10000 ms.",
								"default": 10000
							},
							"protocol": {
								"enum": [
									"chromeDevTools",
									"debugAdapter"
								],
								"description": "Protocol used to connect the debug target: Debug Adapter Protocol, or Chrome DevTools Protocol.",
								"default": "chromeDevTools"
							}
						}
					},
					"attach": {
						"properties": {
							"port": {
								"type": "number",
								"description": "Debug port to attach to. Default is 9229.",
								"default": 9229
							},
							"address": {
								"type": "string",
								"description": "TCP/IP address of process to be debugged. Default is 'localhost'.",
								"default": "localhost"
							},
							"timeout": {
								"type": "number",
								"description": "Retry for this number of milliseconds to connect to GraalVM. Default is 10000 ms.",
								"default": 10000
							},
							"protocol": {
								"enum": [
									"chromeDevTools",
									"debugAdapter"
								],
								"description": "Protocol used to connect the debug target: Debug Adapter Protocol, or Chrome DevTools Protocol.",
								"default": "chromeDevTools"
							},
							"localRoot": {
								"type": [
									"string",
									"null"
								],
								"description": "Path to the local directory containing the program.",
								"default": null
							},
							"remoteRoot": {
								"type": [
									"string",
									"null"
								],
								"description": "Absolute path to the remote directory containing the program.",
								"default": null
							}
						}
					}
				},
				"configurationSnippets": [
					{
						"label": "GraalVM: Launch Polyglot Application",
						"description": "Launch a Polyglot Application in debug mode",
						"body": {
							"type": "graalvm",
							"request": "launch",
							"name": "Launch Polyglot App",
							"runtimeExecutable": "polyglot",
							"program": "^\"${1:\\${file\\}}\""
						}
					},
					{
						"label": "GraalVM: Launch i4gl Script",
						"description": "Launch an i4gl Script in debug mode",
						"body": {
							"type": "graalvm",
							"request": "launch",
							"name": "Launch i4gl Script",
							"runtimeExecutable": "i4gl",
							"program": "^\"${1:\\${file\\}}\""
						}
					},
					{
						"label": "GraalVM: Launch i4gl Terminal",
						"description": "Launch an i4gl terminal in debug mode",
						"body": {
							"type": "graalvm",
							"request": "launch",
							"name": "Launch i4gl Term",
							"runtimeExecutable": "i4gl",
							"console": "integratedTerminal"
						}
					},
					{
						"label": "GraalVM: Attach",
						"description": "Attach to a running GraalVM",
						"body": {
							"type": "graalvm",
							"request": "attach",
							"name": "Attach",
							"port": 9229
						}
					},
					{
						"label": "GraalVM: Attach to Remote",
						"description": "Attach to the debug port of a remote GraalVM",
						"body": {
							"type": "graalvm",
							"request": "attach",
							"name": "Attach to Remote",
							"address": "${1:TCP/IP address of process to be debugged}",
							"port": 9229,
							"localRoot": "${workspaceFolder}",
							"remoteRoot": "${2:Absolute path to the remote directory containing the program}"
						}
					}
				]
			}
		]
	}
}